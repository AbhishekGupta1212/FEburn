{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setError(true);\n      } else {\n        localStorage.setItem('user', JSON.stringify(data));\n        window.location.href = '/dashboard';\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Login, \"Lw6fnQDhm6jsOqAyGKvgSas+k/M=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","localStorage","setItem","window","location","href","console","_c","$RefreshReg$"],"sources":["C:/BrandWick/BrandWick/login/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst Login = () => {\n const [email, setEmail] = useState('');\n const [password, setPassword] = useState('');\n const [error, setError] = useState(false);\n\n const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        setError(true);\n      } else {\n        localStorage.setItem('user', JSON.stringify(data));\n        window.location.href = '/dashboard';\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n };\n\n return (\n    <>\n    </>\n     \n   \n );\n};\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACZ,KAAK,EAAE;QACdC,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLa,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;QAClDI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;MACrC;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACH,CAAC;EAED,oBACGP,OAAA,CAAAF,SAAA,mBACE,CAAC;AAIP,CAAC;AAACI,EAAA,CApCID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}